diff --git a/FFT/src/device/fft1d_float_8.cl b/FFT/src/device/fft1d_float_8.cl
index 5a411ae..69da143 100644
--- a/FFT/src/device/fft1d_float_8.cl
+++ b/FFT/src/device/fft1d_float_8.cl
@@ -109,8 +109,12 @@ void fetch/*PY_CODE_GEN i*/(__global /*PY_CODE_GEN kernel_param_attributes[i]["i
 
   // for iter iterations and one additional iteration to empty the last buffer
   for(unsigned k = 0; k < (iter + 1) * (N / POINTS); k++){ 
-    
+  
+#ifdef INTEL_FPGA
+    // Only use this condition for Intel FPGAs because it will destroy the memory bursts for Xilinx
+    // For Intel, the emulation will fail without this statement because of 
     if (k < iter * ( N / POINTS)) {
+#endif
 
       float2 read_chunk[POINTS];
 
@@ -133,7 +137,9 @@ void fetch/*PY_CODE_GEN i*/(__global /*PY_CODE_GEN kernel_param_attributes[i]["i
         unsigned local_i = k & (2 * N/POINTS - 1);
         buf[local_i][j] = read_chunk[j];
       }
+#ifdef INTEL_FPGA
     }
+#endif
     if (k >= ( N / POINTS)) {
       float2x8 buf2x8;
 
diff --git a/FFT/src/device/fft_8.cl b/FFT/src/device/fft_8.cl
index 188bc95..44e3b2d 100644
--- a/FFT/src/device/fft_8.cl
+++ b/FFT/src/device/fft_8.cl
@@ -264,6 +264,7 @@ float2x8 complex_rotate(float2x8 data, int index, int stage, int size) {
 // 'logN' should be a COMPILE TIME constant evaluating log(N) - the constant is 
 //        propagated throughout the code to achieve efficient hardware
 //
+__attribute__((always_inline))
 float2x8 fft_step(float2x8 data, int step, float2 fft_delay_elements[(1 << LOG_FFT_SIZE) + 8 * (LOG_FFT_SIZE - 2)], 
                   bool inverse, const int logN) {
 
@@ -327,7 +328,7 @@ float2x8 fft_step(float2x8 data, int step, float2 fft_delay_elements[(1 << LOG_F
     // shifting the entire contents in parallel if the loop is unrolled. More
     // important, when unrolling this loop each transfer maps to a trivial 
     // loop-carried dependency
-#pragma unroll
+__attribute__((opencl_unroll_hint()))
     for (int ii = 0; ii < size + 8 * (logN - 2) - 1; ii++) {
         fft_delay_elements[ii] = fft_delay_elements[ii + 1];
     }
diff --git a/GEMM/src/device/gemm_base.cl b/GEMM/src/device/gemm_base.cl
index eec67ba..3599e6c 100644
--- a/GEMM/src/device/gemm_base.cl
+++ b/GEMM/src/device/gemm_base.cl
@@ -49,6 +49,7 @@ do_acc false: c = a * b
 where a,b,c are matrices of size GEMM_BLOCK.
 Calculation itself is fully unrolled.
  */
+ __attribute__((always_inline))
 void register_gemm(const DEVICE_DATA_TYPE a[GEMM_BLOCK][GEMM_BLOCK],
                     const DEVICE_DATA_TYPE b[GEMM_BLOCK][GEMM_BLOCK],
 #ifdef INTEL_FPGA
