diff --git a/LINPACK/src/device/hpl_torus_IEC.cl b/LINPACK/src/device/hpl_torus_IEC.cl
index e744804..022ff99 100644
--- a/LINPACK/src/device/hpl_torus_IEC.cl
+++ b/LINPACK/src/device/hpl_torus_IEC.cl
@@ -31,17 +31,17 @@ typedef struct tmp_channel_chunk { DEVICE_DATA_TYPE data[GEMM_BLOCK];} ch_chunk_
 // external channels from other devices
 // depth is set to a single block row so calculation kernels do not need to stall
 // until the network kernel has received everything
-channel ch_chunk_t ch_top_in __attribute((io("kernel_input_ch0"), depth(1)));
-channel ch_chunk_t ch_bottom_in __attribute((io("kernel_input_ch1"), depth(1)));
-channel ch_chunk_t ch_left_in __attribute((io("kernel_input_ch2"), depth(1)));
-channel ch_chunk_t ch_right_in __attribute((io("kernel_input_ch3"), depth(1)));
+channel ch_chunk_t ch_top_in __attribute((io("kernel_input_ch2"), depth(1)));
+channel ch_chunk_t ch_bottom_in __attribute((io("kernel_input_ch3"), depth(1)));
+channel ch_chunk_t ch_left_in __attribute((io("kernel_input_ch1"), depth(1)));
+channel ch_chunk_t ch_right_in __attribute((io("kernel_input_ch0"), depth(1)));

 // external channels to other devices
 // depth is set only to 1 because the receiver will buffer everything
-channel ch_chunk_t ch_top_out __attribute((io("kernel_output_ch0"), depth(1)));
-channel ch_chunk_t ch_bottom_out __attribute((io("kernel_output_ch1"), depth(1)));
-channel ch_chunk_t ch_left_out __attribute((io("kernel_output_ch2"), depth(1)));
-channel ch_chunk_t ch_right_out __attribute((io("kernel_output_ch3"), depth(1)));
+channel ch_chunk_t ch_top_out __attribute((io("kernel_output_ch2"), depth(1)));
+channel ch_chunk_t ch_bottom_out __attribute((io("kernel_output_ch3"), depth(1)));
+channel ch_chunk_t ch_left_out __attribute((io("kernel_output_ch1"), depth(1)));
+channel ch_chunk_t ch_right_out __attribute((io("kernel_output_ch0"), depth(1)));


 // channels to and from the local kernels
